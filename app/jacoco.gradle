apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.6" //指定jacoco的版本
    reportsDir = file("$buildDir/JacocoReport") //指定jacoco生成报告的文件夹
}

// https://github.com/gradle/gradle/issues/5184
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

android {
    buildTypes {
        debug {
            //打开覆盖率统计开关
            testCoverageEnabled = true
            buildConfigField "boolean", "IS_DEBUG", "true"
            multiDexEnabled true
        }
    }
}

//依赖于testDebugUnitTest任务
task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group = "reporting" //指定task的分组
    reports {
        xml.enabled = true //开启xml报告
        html.enabled = true //开启html报告
    }

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes/com/weihua/epworker", //指定类文件夹
            includes: ["**/*.*"], //包含类的规则,这里我们生成所有类的测试报告
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']) //排除类的规则

    def mainSrc = "${project.projectDir}/src/main/java" //指定源码目录

    sourceDirectories.from files([mainSrc])
    classDirectories.from files([debugTree])
    executionData.from files("${buildDir}/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec") //指定报告数据的路径
}